[{"name":"server.R","content":"library(shiny)\r\nif (!requireNamespace(\"DT\", quietly = TRUE)) install.packages(\"DT\")\r\nif (!requireNamespace(\"data.table\", quietly = TRUE)) install.packages(\"data.table\")\r\nlibrary(data.table)\r\nlibrary(DT)\r\n\r\nfunction(input, output, session) {\r\n  # Reactive value to store conditions and combinations\r\n  rv <- reactiveValues(conditions = character(), combinations = data.frame(Combination = character()))\r\n  \r\n  # Read keys.txt and extract conditions from condition column\r\n  observeEvent(input$file, {\r\n    req(input$file)\r\n    data <- read.table(input$file$datapath, header = TRUE, sep = \"\\t\")\r\n    unique_conditions <- unique(data$Condition)\r\n    rv$conditions <- unique_conditions\r\n    updateCheckboxGroupInput(session, \"conditions\", choices = rv$conditions)\r\n  })\r\n  \r\n  # Add new condition\r\n  observeEvent(input$add_condition, {\r\n    new_condition <- input$new_condition\r\n    if (new_condition != \"\" && !new_condition %in% rv$conditions) {\r\n      rv$conditions <- c(rv$conditions, new_condition)\r\n      updateCheckboxGroupInput(session, \"conditions\", choices = rv$conditions)\r\n      updateTextInput(session, \"new_condition\", value = \"\")\r\n    }\r\n  })\r\n  \r\n  # Generate combinations in contrqst.txt\r\n  observeEvent(input$generate, {\r\n    selected_conditions <- input$conditions\r\n    if (length(selected_conditions) > 1) {\r\n      new_combinations <- combn(selected_conditions, 2, FUN = function(x) paste(x, collapse = \"-\"))\r\n      new_combinations_df <- data.frame(Combination = new_combinations)\r\n      rv$combinations <- rbind(rv$combinations, new_combinations_df)\r\n      write.table(rv$combinations, \"contrast.txt\", row.names = FALSE, col.names = TRUE, sep = \"\\t\", append = FALSE)\r\n      output$output_text <- renderText({ \"Combination(s) added to contrast.txt\" })\r\n    }\r\n  })\r\n  \r\n  # Swap selected combinations\r\n  observeEvent(input$swap, {\r\n    selected_rows <- input$table_rows_selected\r\n    if (!is.null(selected_rows) && length(selected_rows) > 0) {\r\n      for (row in selected_rows) {\r\n        combo <- unlist(strsplit(rv$combinations$Combination[row], \"-\"))\r\n        swapped_combo <- paste(combo[2], combo[1], sep = \"-\")\r\n        rv$combinations$Combination[row] <- swapped_combo\r\n      }\r\n      write.table(rv$combinations, \"contrast.txt\", row.names = FALSE, col.names = TRUE, sep = \"\\t\", append = FALSE)\r\n      output$output_text <- renderText({ \"Selected combination(s) swapped in contrast.txt\" })\r\n    }\r\n  })\r\n  \r\n  # Remove selected combinations\r\n  observeEvent(input$remove, {\r\n    selected_rows <- input$table_rows_selected\r\n    if (!is.null(selected_rows) && length(selected_rows) > 0) {\r\n      rv$combinations <- rv$combinations[-selected_rows, , drop = FALSE]\r\n      write.table(rv$combinations, \"contrast.txt\", row.names = FALSE, col.names = TRUE, sep = \"\\t\", append = FALSE)\r\n      output$output_text <- renderText({ \"Selected combination(s) removed from contrast.txt\" })\r\n    }\r\n  })\r\n  \r\n  # Render DataTable\r\n  output$table <- renderDataTable({\r\n    rv$combinations\r\n  }, rownames = FALSE)\r\n  # Download button handler\r\n \r\n  output$contrast <- downloadHandler(\r\n    filename = function() {\r\n      \"contrast.txt\"\r\n      \r\n    },\r\n    content = function(file) {\r\n      write.table(rv$combinations, file, row.names = FALSE, col.names = FALSE, sep = \"\\t\")\r\n    },\r\n    contentType = \"text/plain\"  # Ensure contentType is set to text/plain\r\n  )\r\n}","type":"text"},{"name":"ui.R","content":"library(shiny)\r\n\r\n# Workaround for Chromium Issue 468227\r\ndownloadButton <- function(...) {\r\n  tag <- shiny::downloadButton(...)\r\n  tag$attribs$download <- NULL\r\n  tag}\r\n\r\nfluidPage(\r\n  titlePanel(\"Contrast.txt Generator\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      fileInput(\"file\", \"Choose keys.txt File\", accept = \".txt\"),\r\n      textInput(\"new_condition\", \"New Condition\", \"\"),\r\n      actionButton(\"add_condition\", \"Add Condition\"),\r\n      checkboxGroupInput(\"conditions\", \"Select Conditions\", choices = NULL),\r\n      actionButton(\"generate\", \"Generate Combination(s)\")\r\n    ),\r\n    mainPanel(\r\n      DT::dataTableOutput(\"table\"),\r\n      actionButton(\"swap\", \"Swap Selected Combination(s)\"),\r\n      actionButton(\"remove\", \"Remove Selected Combination(s)\"),\r\n      downloadButton(\"contrast\", \"Download contrast.txt\"),\r\n      verbatimTextOutput(\"output_text\")\r\n    )\r\n  )\r\n)","type":"text"}]
