shiny::runApp()
shiny::runApp()
runApp()
ls
MasterTest/
├── app.R
runApp()
install.packages(c("shinylive","httpuv"))
install.packages(c("shinylive","httpuv"))
shiny::runApp()
runApp()
runApp()
packageVersion("shinylive")
packageVersion("httpuv")
# Run the application
shinyApp(ui = ui, server = server)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?runurl
?runUrl
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/Marco/Desktop/ShinyAnalysis/ContrastGenerator')
runApp('C:/Users/Marco/Desktop/ShinyAnalysis/ContrastGenerator')
library(DT)
runApp('C:/Users/Marco/Desktop/ShinyAnalysis/ContrastGenerator')
install.packages("shinylive")
install.packages("httpuv")
getwd()
setwd(C:/Users/Marco/Desktop/ShinyAnalysis)
setwd("C:/Users/Marco/Desktop/ShinyAnalysis/ContrastGenerator")
setwd("C:/Users/Marco/Desktop/ShinyAnalysis/")
shinylive::export(appdir = "ContrastGenerator", destdir = "docs")
httpuv::runStaticServer("docs/", port=8008)
httpuv::runStaticServer("docs/")
httpuv::runStaticServer("docs/")
getwd()
setwd("C:/Users/Marco/Desktop/ShinyAnalysis/ContrastGenerator")
getwd()
httpuv::runStaticServer("docs/")
shinylive::export(appdir = "App", destdir = "docs")
httpuv::runStaticServer("docs/")
shiny::runApp('App')
library(DT)
runApp('App')
getwd()
shinylive::export(appdir = "App", destdir = "docs")
httpuv::runStaticServer("docs")
